{"version":3,"file":"notion-kroki.user.js","sources":["src/common/utils.ts","src/main.ts","src/index.ts"],"sourcesContent":["export function debounce<\n  T extends (...args: Parameters<typeof console.log>) => void,\n  P extends Parameters<T>,\n>(func: T, wait: number): (...args: P) => void {\n  let timeoutId: ReturnType<typeof setTimeout> | undefined;\n  return (...args: P) => {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => {\n      timeoutId = undefined;\n      func(...args);\n    }, wait);\n  };\n}\n\nexport function _debug(...data: Parameters<typeof console.log>): void {\n  if (isDebugMode()) {\n    console.log(...data);\n  }\n}\n\nexport function isDebugMode(): boolean {\n  return !!localStorage.getItem(\"debug\");\n}\n","import { _debug, debounce } from \"./common/utils.ts\";\nimport type { KrokiOption } from \"./@types/types.d.ts\";\nconst defaultConfig: KrokiOption = {\n  serverPath: \"https://kroki.io/\",\n};\n\nexport function main(element: HTMLElement | null = null) {\n  const blocks: HTMLElement[] = Array.from(\n    (element || document.body).querySelectorAll(\"*\"),\n  ).filter((it) => it.innerHTML.trim().startsWith(\"//kroki \")) as HTMLElement[];\n  for (const codeDiv of blocks) {\n    const lines = codeDiv.textContent!.split(\"\\n\");\n    const type = lines[0].replace(\"//kroki\", \"\").trim();\n    if (!type.trim()) continue;\n    const data = lines.filter((_value, index) => index !== 0).join(\"\\n\");\n    if (!data.trim()) continue;\n    const svgUrl = plant(data, type, defaultConfig);\n    const div = document.createElement(\"div\");\n    div.setAttribute(\n      \"style\",\n      \"display: flex; flex-direction: row; place-content: center;\",\n    );\n    div.setAttribute(\"notion-kroki\", \"true\");\n    div.innerHTML =\n      `<object type=\"image/svg+xml\" style=\"max-width: 100%;\" data=\"${svgUrl}\" />`;\n\n    const parentElement = codeDiv.parentElement!.parentElement!;\n    const preCreatedNode = parentElement.querySelector(\"div[notion-kroki]\");\n    if (preCreatedNode) {\n      const preSvgUrl = preCreatedNode.firstElementChild!.getAttribute(\"data\");\n      _debug(`preSvgUrl:${preSvgUrl}`);\n      _debug(`svgUrl:${svgUrl}`);\n      if (preSvgUrl === svgUrl) {\n        continue;\n      } else {\n        parentElement.removeChild(preCreatedNode);\n      }\n    }\n\n    parentElement.appendChild(div);\n  }\n}\n\nfunction textEncode(str: string) {\n  return new TextEncoder().encode(str);\n}\n\nfunction plant(content: string, type: string, config: KrokiOption) {\n  _debug(`kroki render type: ${type}`);\n  _debug(`kroki render content:\\n${content}`);\n\n  const urlPrefix = `${config!.serverPath + type}/svg/`;\n  const data: Uint8Array = textEncode(content);\n  const compressed: string = strFromU8(fflate.zlibSync(data, { level: 9 }));\n  const result: string = btoa(compressed)\n    .replace(/\\+/g, \"-\")\n    .replace(/\\//g, \"_\");\n  const svgUrl: string = urlPrefix + result;\n\n  return svgUrl;\n}\n\nexport function init_listener() {\n  if (typeof MutationObserver !== typeof undefined) {\n    new MutationObserver(check).observe(document, {\n      childList: true,\n      subtree: true,\n    });\n  }\n}\n\nconst render = debounce(main, 100);\n\nfunction check(mutations: MutationRecord[], _observer: MutationObserver) {\n  // _debug(\"mutations\", mutations);\n  render();\n}\n\nfunction strFromU8(dat: Uint8Array) {\n  let r = \"\";\n  const s = 2 ** 15;\n  for (let i = 0; i < dat.length; i += s) {\n    r += String.fromCharCode(...dat.subarray(i, i + s));\n  }\n  return r;\n}\n","import { init_listener, main } from \"./main.ts\";\nmain();\ninit_listener();\n"],"names":[],"mappings":"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"}